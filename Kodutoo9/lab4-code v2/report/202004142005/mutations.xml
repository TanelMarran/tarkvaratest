<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>addTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>17</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.addTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>removed call to ee/ut/cs/swt/MinimumBinaryHeap::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>addTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>12</index><block>17</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.addTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>removed call to ee/ut/cs/swt/MinimumBinaryHeap::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>addTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>17</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.addTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>removed call to ee/ut/cs/swt/MinimumBinaryHeap::add</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>addTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>24</index><block>17</block><killingTest/><description>removed call to ee/ut/cs/swt/MinimumBinaryHeap::add</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>addTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>30</index><block>17</block><killingTest/><description>removed call to ee/ut/cs/swt/MinimumBinaryHeap::add</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>addTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>43</index><block>17</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>addTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>56</index><block>17</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>addTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>69</index><block>17</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>assertMinHeap</mutatedMethod><methodDescription>(Ljava/util/List;[Ljava/lang/Integer;)V</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>29</index><block>7</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.minHeapifyTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>assertMinHeap</mutatedMethod><methodDescription>(Ljava/util/List;[Ljava/lang/Integer;)V</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>45</index><block>9</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.minHeapifyTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>assertMinHeap</mutatedMethod><methodDescription>(Ljava/util/List;[Ljava/lang/Integer;)V</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>60</index><block>10</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>assertMinHeap</mutatedMethod><methodDescription>(Ljava/util/List;[Ljava/lang/Integer;)V</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>54</index><block>10</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.minHeapifyTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>assertMinHeap</mutatedMethod><methodDescription>(Ljava/util/List;[Ljava/lang/Integer;)V</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>6</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.minHeapifyTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>assertMinHeap</mutatedMethod><methodDescription>(Ljava/util/List;[Ljava/lang/Integer;)V</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>7</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>assertMinHeap</mutatedMethod><methodDescription>(Ljava/util/List;[Ljava/lang/Integer;)V</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>8</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.minHeapifyTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>assertMinHeap</mutatedMethod><methodDescription>(Ljava/util/List;[Ljava/lang/Integer;)V</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>45</index><block>9</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.minHeapifyTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>assertMinHeap</mutatedMethod><methodDescription>(Ljava/util/List;[Ljava/lang/Integer;)V</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>60</index><block>10</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.minHeapifyTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>assertMinHeap</mutatedMethod><methodDescription>(Ljava/util/List;[Ljava/lang/Integer;)V</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>7</block><killingTest/><description>removed call to org/junit/Assert::fail</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>assertMinHeap</mutatedMethod><methodDescription>(Ljava/util/List;[Ljava/lang/Integer;)V</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>40</index><block>9</block><killingTest/><description>removed call to org/junit/Assert::fail</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>assertMinHeap</mutatedMethod><methodDescription>(Ljava/util/List;[Ljava/lang/Integer;)V</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>63</index><block>11</block><killingTest/><description>removed call to org/junit/Assert::fail</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>assertOrder</mutatedMethod><methodDescription>(Ljava/util/List;[Ljava/lang/Integer;)V</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>27</index><block>2</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.removeLastTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>assertOrder</mutatedMethod><methodDescription>(Ljava/util/List;[Ljava/lang/Integer;)V</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>1</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.removeLastTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>assertOrder</mutatedMethod><methodDescription>(Ljava/util/List;[Ljava/lang/Integer;)V</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>2</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>assertOrder</mutatedMethod><methodDescription>(Ljava/util/List;[Ljava/lang/Integer;)V</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>3</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.removeLastTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>assertOrder</mutatedMethod><methodDescription>(Ljava/util/List;[Ljava/lang/Integer;)V</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>2</block><killingTest/><description>removed call to org/junit/Assert::fail</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>assertOrder</mutatedMethod><methodDescription>(Ljava/util/List;[Ljava/lang/Integer;)V</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>40</index><block>4</block><killingTest/><description>removed call to org/junit/Assert::fail</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>extractAllMinTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>68</index><block>22</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.extractAllMinTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>extractAllMinTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>89</index><block>23</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.extractAllMinTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>extractAllMinTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>68</index><block>22</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.extractAllMinTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>extractAllMinTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>53</index><block>22</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.extractAllMinTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>removed call to java/util/List::sort</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>extractAllMinTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>59</index><block>22</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.extractAllMinTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>removed call to ee/ut/cs/swt/MinimumBinaryHeap::minHeapify</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>extractAllMinTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>86</index><block>23</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>extractAllMinTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>100</index><block>24</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>extractMinTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>15</block><killingTest/><description>removed call to ee/ut/cs/swt/MinimumBinaryHeap::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>extractMinTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>12</index><block>15</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.extractMinTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>removed call to ee/ut/cs/swt/MinimumBinaryHeap::add</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>extractMinTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>15</block><killingTest/><description>removed call to ee/ut/cs/swt/MinimumBinaryHeap::add</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>extractMinTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>30</index><block>15</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>isEmptyTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>19</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>minHeapifyTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><block>14</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.minHeapifyTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>removed call to ee/ut/cs/swt/MinimumBinaryHeap::minHeapify</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>minHeapifyTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>41</index><block>14</block><killingTest/><description>removed call to ee/ut/cs/swt/MinimumBinaryHeapTest::assertMinHeap</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>removeImpossibleOrderTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>21</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.removeImpossibleOrderTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>removed call to ee/ut/cs/swt/MinimumBinaryHeap::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>removeImpossibleOrderTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>12</index><block>21</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.removeImpossibleOrderTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>removed call to ee/ut/cs/swt/MinimumBinaryHeap::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>removeImpossibleOrderTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>21</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.removeImpossibleOrderTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>removed call to ee/ut/cs/swt/MinimumBinaryHeap::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>removeImpossibleOrderTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>24</index><block>21</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.removeImpossibleOrderTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>removed call to ee/ut/cs/swt/MinimumBinaryHeap::add</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>removeImpossibleOrderTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>35</index><block>21</block><killingTest/><description>removed call to org/junit/Assert::assertFalse</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>removeImpossibleOrderTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>64</index><block>21</block><killingTest/><description>removed call to ee/ut/cs/swt/MinimumBinaryHeapTest::assertMinHeap</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>removeLastTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>25</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.removeLastTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>removed call to ee/ut/cs/swt/MinimumBinaryHeap::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>removeLastTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>12</index><block>25</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.removeLastTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>removed call to ee/ut/cs/swt/MinimumBinaryHeap::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>removeLastTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>25</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.removeLastTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>removed call to ee/ut/cs/swt/MinimumBinaryHeap::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>removeLastTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>24</index><block>25</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.removeLastTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>removed call to ee/ut/cs/swt/MinimumBinaryHeap::add</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>removeLastTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>31</index><block>25</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>removeLastTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>55</index><block>25</block><killingTest/><description>removed call to ee/ut/cs/swt/MinimumBinaryHeapTest::assertOrder</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>removeOrderTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>20</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.removeOrderTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>removed call to ee/ut/cs/swt/MinimumBinaryHeap::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>removeOrderTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>12</index><block>20</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.removeOrderTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>removed call to ee/ut/cs/swt/MinimumBinaryHeap::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>removeOrderTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>20</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.removeOrderTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>removed call to ee/ut/cs/swt/MinimumBinaryHeap::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>removeOrderTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>24</index><block>20</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.removeOrderTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>removed call to ee/ut/cs/swt/MinimumBinaryHeap::add</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>removeOrderTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>35</index><block>20</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>removeOrderTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>59</index><block>20</block><killingTest/><description>removed call to ee/ut/cs/swt/MinimumBinaryHeapTest::assertMinHeap</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>removeTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>18</block><killingTest/><description>removed call to ee/ut/cs/swt/MinimumBinaryHeap::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>removeTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>12</index><block>18</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.removeTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>removed call to ee/ut/cs/swt/MinimumBinaryHeap::add</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>removeTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>18</block><killingTest/><description>removed call to ee/ut/cs/swt/MinimumBinaryHeap::add</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>removeTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>29</index><block>18</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>swapTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>16</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.swapTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>removed call to ee/ut/cs/swt/MinimumBinaryHeap::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>swapTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>12</index><block>16</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.swapTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>removed call to ee/ut/cs/swt/MinimumBinaryHeap::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>swapTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>16</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.swapTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>removed call to ee/ut/cs/swt/MinimumBinaryHeap::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>swapTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>25</index><block>16</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.swapTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>removed call to ee/ut/cs/swt/MinimumBinaryHeap::swap</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>swapTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>38</index><block>16</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>swapTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>51</index><block>16</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeapTest.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeapTest</mutatedClass><mutatedMethod>swapTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>64</index><block>16</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeap.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeap</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>6</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.removeTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MinimumBinaryHeap.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeap</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>6</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.extractMinTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>removed call to ee/ut/cs/swt/MinimumBinaryHeap::bubbleUp</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MinimumBinaryHeap.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeap</mutatedClass><mutatedMethod>bubbleDown</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>31</index><block>12</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.extractAllMinTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>MinimumBinaryHeap.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeap</mutatedClass><mutatedMethod>bubbleDown</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>44</index><block>13</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MinimumBinaryHeap.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeap</mutatedClass><mutatedMethod>bubbleDown</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>54</index><block>14</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.extractAllMinTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>MinimumBinaryHeap.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeap</mutatedClass><mutatedMethod>bubbleDown</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>67</index><block>15</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MinimumBinaryHeap.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeap</mutatedClass><mutatedMethod>bubbleDown</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>12</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.extractAllMinTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MinimumBinaryHeap.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeap</mutatedClass><mutatedMethod>bubbleDown</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>12</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.extractAllMinTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MinimumBinaryHeap.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeap</mutatedClass><mutatedMethod>bubbleDown</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>12</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.extractAllMinTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeap.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeap</mutatedClass><mutatedMethod>bubbleDown</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>12</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.removeTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeap.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeap</mutatedClass><mutatedMethod>bubbleDown</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>12</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.removeTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MinimumBinaryHeap.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeap</mutatedClass><mutatedMethod>bubbleDown</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>13</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.extractAllMinTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeap.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeap</mutatedClass><mutatedMethod>bubbleDown</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>54</index><block>14</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.removeTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MinimumBinaryHeap.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeap</mutatedClass><mutatedMethod>bubbleDown</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>67</index><block>15</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.extractAllMinTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeap.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeap</mutatedClass><mutatedMethod>bubbleDown</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>77</index><block>16</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.removeTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeap.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeap</mutatedClass><mutatedMethod>bubbleDown</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>83</index><block>17</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.extractAllMinTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>removed call to ee/ut/cs/swt/MinimumBinaryHeap::swap</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>MinimumBinaryHeap.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeap</mutatedClass><mutatedMethod>bubbleDown</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>88</index><block>17</block><killingTest/><description>removed call to ee/ut/cs/swt/MinimumBinaryHeap::bubbleDown</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>MinimumBinaryHeap.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeap</mutatedClass><mutatedMethod>bubbleUp</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>28</index><block>9</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeap.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeap</mutatedClass><mutatedMethod>bubbleUp</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>9</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.removeTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MinimumBinaryHeap.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeap</mutatedClass><mutatedMethod>bubbleUp</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>43</index><block>10</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.minHeapifyTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeap.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeap</mutatedClass><mutatedMethod>bubbleUp</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>45</index><block>10</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.removeTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MinimumBinaryHeap.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeap</mutatedClass><mutatedMethod>bubbleUp</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>7</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.extractMinTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>MinimumBinaryHeap.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeap</mutatedClass><mutatedMethod>bubbleUp</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>9</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MinimumBinaryHeap.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeap</mutatedClass><mutatedMethod>bubbleUp</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>34</index><block>10</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.extractMinTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>removed call to ee/ut/cs/swt/MinimumBinaryHeap::swap</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeap.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeap</mutatedClass><mutatedMethod>exractMin</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>4</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.extractAllMinTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeap.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeap</mutatedClass><mutatedMethod>exractMin</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><block>4</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.extractAllMinTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeap.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeap</mutatedClass><mutatedMethod>exractMin</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>51</index><block>4</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.extractAllMinTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeap.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeap</mutatedClass><mutatedMethod>exractMin</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>47</index><block>4</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.extractAllMinTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>removed call to ee/ut/cs/swt/MinimumBinaryHeap::bubbleDown</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeap.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeap</mutatedClass><mutatedMethod>getArray</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>24</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.swapTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>mutated return of Object value for ee/ut/cs/swt/MinimumBinaryHeap::getArray to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeap.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeap</mutatedClass><mutatedMethod>isEmpty</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>23</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.isEmptyTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeap.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeap</mutatedClass><mutatedMethod>minHeapify</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>1</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.extractAllMinTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MinimumBinaryHeap.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeap</mutatedClass><mutatedMethod>minHeapify</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>1</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.minHeapifyTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MinimumBinaryHeap.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeap</mutatedClass><mutatedMethod>minHeapify</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>23</index><block>2</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.minHeapifyTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>removed call to ee/ut/cs/swt/MinimumBinaryHeap::bubbleUp</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MinimumBinaryHeap.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>26</index><block>20</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MinimumBinaryHeap.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>36</index><block>21</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeap.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>55</index><block>22</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.removeTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeap.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>67</index><block>22</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.removeTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeap.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>18</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.removeTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MinimumBinaryHeap.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>20</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.removeLastTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeap.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>19</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.removeImpossibleOrderTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MinimumBinaryHeap.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>42</index><block>21</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumBinaryHeap.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>78</index><block>22</block><killingTest>ee.ut.cs.swt.MinimumBinaryHeapTest.removeTest(ee.ut.cs.swt.MinimumBinaryHeapTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MinimumBinaryHeap.java</sourceFile><mutatedClass>ee.ut.cs.swt.MinimumBinaryHeap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>74</index><block>22</block><killingTest/><description>removed call to ee/ut/cs/swt/MinimumBinaryHeap::bubbleDown</description></mutation>
</mutations>
